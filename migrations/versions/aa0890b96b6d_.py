"""empty message

Revision ID: aa0890b96b6d
Revises: 
Create Date: 2019-09-13 17:40:20.134734

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aa0890b96b6d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('total_bill', sa.Integer(), nullable=False),
    sa.Column('total_items', sa.Integer(), nullable=False),
    sa.Column('date_add', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickettypes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('quanity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_column('events', 'price')
    op.add_column('tickets', sa.Column('UUID', sa.Integer(), nullable=False))
    op.add_column('tickets', sa.Column('order_id', sa.Integer(), nullable=True))
    op.add_column('tickets', sa.Column('redeemed', sa.String(), nullable=True))
    op.add_column('tickets', sa.Column('ticket_type', sa.Integer(), nullable=True))
    op.add_column('tickets', sa.Column('user_id', sa.Integer(), nullable=True))
    op.drop_constraint('tickets_event_id_fkey', 'tickets', type_='foreignkey')
    op.drop_constraint('tickets_owner_id_fkey', 'tickets', type_='foreignkey')
    op.create_foreign_key(None, 'tickets', 'tickettypes', ['ticket_type'], ['id'])
    op.create_foreign_key(None, 'tickets', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'tickets', 'orders', ['order_id'], ['id'])
    op.drop_column('tickets', 'owner_id')
    op.drop_column('tickets', 'updated')
    op.drop_column('tickets', 'price')
    op.drop_column('tickets', 'code')
    op.drop_column('tickets', 'event_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tickets', sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tickets', sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('tickets', sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tickets', sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('tickets', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.create_foreign_key('tickets_owner_id_fkey', 'tickets', 'users', ['owner_id'], ['id'])
    op.create_foreign_key('tickets_event_id_fkey', 'tickets', 'events', ['event_id'], ['id'])
    op.drop_column('tickets', 'user_id')
    op.drop_column('tickets', 'ticket_type')
    op.drop_column('tickets', 'redeemed')
    op.drop_column('tickets', 'order_id')
    op.drop_column('tickets', 'UUID')
    op.add_column('events', sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_table('tickettypes')
    op.drop_table('orders')
    # ### end Alembic commands ###
